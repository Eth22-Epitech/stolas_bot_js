export function mapValues(object, mapFn) {
    if (Array.isArray(object)) {
        throw "This map is just for objects, just use array.map for arrays";
    }
    return Object.keys(object).reduce(function (result, key) {
        result[key] = mapFn(object[key], key);
        return result;
    }, {});
}
export function forEach(object, mapFn) {
    if (Array.isArray(object)) {
        throw "This map is just for objects, just use array.forEach for arrays";
    }
    return Object.keys(object).forEach(function (key) {
        mapFn(object[key], key);
    });
}
export function take(arr, count) {
    if (count === void 0) { count = 0; }
    return arr.slice(0, count);
}
export function without(arr, values) {
    return arr.filter(function (val) { return values.indexOf(val) === -1; });
}
export function pick(object, pick) {
    var res = {};
    pick.forEach(function (key) {
        if (object[key] !== undefined) {
            res[key] = object[key];
        }
    });
    return res;
}
//# sourceMappingURL=collections.js.map